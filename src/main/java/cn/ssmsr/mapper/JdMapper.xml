<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ssmsr.mapper.JdMapper" >
<cache eviction="LRU" type="cn.ssmsr.redis.LoggingRedisCache"/>
  <resultMap id="BaseResultMap" type="cn.ssmsr.po.Jd" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="INTEGER" />
    <result column="goodcomment" property="goodcomment" jdbcType="INTEGER" />
    <result column="poorcountstr" property="poorcountstr" jdbcType="INTEGER" />
    <result column="aftercount" property="aftercount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, link, price, comment, goodcomment, poorcountstr, aftercount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.ssmsr.po.JdExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from jd
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" useCache="true">
    select 
    <include refid="Base_Column_List" />
    from jd
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jd
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ssmsr.po.JdExample" >
    delete from jd
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ssmsr.po.Jd" useGeneratedKeys="true" keyProperty="id">
    insert into jd (id, title, link, 
      price, comment, goodcomment, 
      poorcountstr, aftercount)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{comment,jdbcType=INTEGER}, #{goodcomment,jdbcType=INTEGER}, 
      #{poorcountstr,jdbcType=INTEGER}, #{aftercount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.ssmsr.po.Jd" >
    insert into jd
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="link != null" >
        link,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="goodcomment != null" >
        goodcomment,
      </if>
      <if test="poorcountstr != null" >
        poorcountstr,
      </if>
      <if test="aftercount != null" >
        aftercount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=INTEGER},
      </if>
      <if test="goodcomment != null" >
        #{goodcomment,jdbcType=INTEGER},
      </if>
      <if test="poorcountstr != null" >
        #{poorcountstr,jdbcType=INTEGER},
      </if>
      <if test="aftercount != null" >
        #{aftercount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ssmsr.po.JdExample" resultType="java.lang.Integer" >
    select count(*) from jd
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update jd
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null" >
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=INTEGER},
      </if>
      <if test="record.goodcomment != null" >
        goodcomment = #{record.goodcomment,jdbcType=INTEGER},
      </if>
      <if test="record.poorcountstr != null" >
        poorcountstr = #{record.poorcountstr,jdbcType=INTEGER},
      </if>
      <if test="record.aftercount != null" >
        aftercount = #{record.aftercount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update jd
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=INTEGER},
      goodcomment = #{record.goodcomment,jdbcType=INTEGER},
      poorcountstr = #{record.poorcountstr,jdbcType=INTEGER},
      aftercount = #{record.aftercount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ssmsr.po.Jd" >
    update jd
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=INTEGER},
      </if>
      <if test="goodcomment != null" >
        goodcomment = #{goodcomment,jdbcType=INTEGER},
      </if>
      <if test="poorcountstr != null" >
        poorcountstr = #{poorcountstr,jdbcType=INTEGER},
      </if>
      <if test="aftercount != null" >
        aftercount = #{aftercount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ssmsr.po.Jd" >
    update jd
    set title = #{title,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      comment = #{comment,jdbcType=INTEGER},
      goodcomment = #{goodcomment,jdbcType=INTEGER},
      poorcountstr = #{poorcountstr,jdbcType=INTEGER},
      aftercount = #{aftercount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>